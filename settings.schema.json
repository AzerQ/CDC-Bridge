{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://example.com/schemas/cdc-bridge/settings.schema.json",
    "title": "CDC Bridge — Формат настроек",
    "description": "Схема описывает формат файла настроек приложения CDC Bridge. Комментарии приведены в полях 'description' и '$comment'.",
    "$comment": "Основные разделы: connections, trackingInstances, filters, transformers, receivers.",
    "type": "object",
    "additionalProperties": false,
    "properties": {
        "$schema": {
            "type": "string",
            "format": "uri-reference",
            "description": "Опциональная ссылка на JSON Schema для IDE/валидаторов. Обычно относительный путь к этой схеме."
        },
        "_comment": {
            "type": "string",
            "description": "Произвольный комментарий к файлу настроек. JSON не поддерживает // комментарии, поэтому используйте это поле."
        },
        "connections": {
            "type": "array",
            "minItems": 1,
            "description": "Список подключений к источникам данных (например, БД).",
            "items": {
                "$ref": "#/$defs/Connection"
            }
        },
        "trackingInstances": {
            "type": "array",
            "minItems": 1,
            "description": "Экземпляры трекинга изменений для отдельных таблиц/сущностей.",
            "items": {
                "$ref": "#/$defs/TrackingInstance"
            }
        },
        "filters": {
            "type": "array",
            "description": "Набор фильтров для отбора событий изменений.",
            "items": {
                "$ref": "#/$defs/Filter"
            }
        },
        "transformers": {
            "type": "array",
            "description": "Преобразователи полезной нагрузки перед отправкой получателям.",
            "items": {
                "$ref": "#/$defs/Transformer"
            }
        },
        "receivers": {
            "type": "array",
            "description": "Получатели уведомлений о событиях (каналы доставки).",
            "items": {
                "$ref": "#/$defs/Receiver"
            }
        }
    },
    "required": [
        "connections",
        "trackingInstances"
    ],
    "$defs": {
        "Connection": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "_comment": {
                    "type": "string",
                    "description": "Комментарий к подключению."
                },
                "name": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Уникальное имя подключения. Используется для ссылки из других разделов (например, trackingInstances.connection)."
                },
                "description": {
                    "type": "string",
                    "description": "Описание назначения подключения."
                },
                "type": {
                    "type": "string",
                    "description": "Тип источника данных. Примеры: SqlServer, Postgres, MySql, Oracle, SQLite.",
                    "$comment": "Список типов может быть расширен приложением."
                },
                "connectionString": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Строка подключения к источнику данных. Формат зависит от 'type'."
                },
                "active": {
                    "type": "boolean",
                    "description": "Признак, активно ли данное подключение."
                }
            },
            "required": [
                "name",
                "type",
                "connectionString",
                "active"
            ]
        },
        "TrackingInstance": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "_comment": {
                    "type": "string",
                    "description": "Комментарий к экземпляру трекинга."
                },
                "sourceTable": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Имя источника (обычно имя таблицы) в подключении. Это значение также используется как ссылочный идентификатор из filters/receivers."
                },
                "capturedColumns": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "string",
                        "minLength": 1
                    },
                    "description": "Список колонок, чьи изменения необходимо отслеживать."
                },
                "description": {
                    "type": "string",
                    "description": "Описание цели отслеживания."
                },
                "connection": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Имя подключения из раздела 'connections', с которым связана таблица."
                },
                "active": {
                    "type": "boolean",
                    "description": "Включен ли трекинг для данного источника."
                },
                "checkIntervalInSeconds": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Периодичность проверки изменений (секунды)."
                }
            },
            "required": [
                "sourceTable",
                "capturedColumns",
                "connection",
                "active",
                "checkIntervalInSeconds"
            ],
            "$comment": "Уникальность по sourceTable рекомендуется для однозначных ссылок из filters/receivers, но не может быть строго проверена JSON Schema."
        },
        "Filter": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "_comment": {
                    "type": "string",
                    "description": "Комментарий к фильтру."
                },
                "name": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Уникальное имя фильтра для ссылок из receivers."
                },
                "description": {
                    "type": "string",
                    "description": "Описание условия фильтрации."
                },
                "trackingInstance": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Ссылка на TrackingInstance по значению его 'sourceTable'."
                },
                "type": {
                    "type": "string",
                    "description": "Тип фильтра. Поддерживаемые примеры: JsonPathFilter.",
                    "$comment": "Приложение может поддерживать дополнительные типы."
                },
                "parameters": {
                    "type": "object",
                    "description": "Параметры фильтра. Состав зависит от типа."
                }
            },
            "required": [
                "name",
                "trackingInstance",
                "type",
                "parameters"
            ],
            "allOf": [
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "JsonPathFilter"
                            }
                        },
                        "required": [
                            "type"
                        ]
                    },
                    "then": {
                        "properties": {
                            "parameters": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "expression": {
                                        "type": "string",
                                        "minLength": 1,
                                        "description": "JsonPath выражение для фильтрации массива/объекта события."
                                    }
                                },
                                "required": [
                                    "expression"
                                ]
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "ExternalServiceFilter"
                            }
                        },
                        "required": [
                            "type"
                        ]
                    },
                    "then": {
                        "properties": {
                            "parameters": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "serviceUrl": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "URL внешнего сервиса для проверки условия."
                                    },
                                    "httpMethod": {
                                        "type": "string",
                                        "enum": [
                                            "GET",
                                            "POST",
                                            "PUT",
                                            "PATCH",
                                            "DELETE"
                                        ],
                                        "description": "HTTP метод запроса."
                                    }
                                },
                                "required": [
                                    "serviceUrl",
                                    "httpMethod"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        "Transformer": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "_comment": {
                    "type": "string",
                    "description": "Комментарий к трансформеру."
                },
                "name": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Уникальное имя трансформера."
                },
                "description": {
                    "type": "string",
                    "description": "Описание преобразования."
                },
                "type": {
                    "type": "string",
                    "description": "Тип трансформера. Пример: JSONataTransformer.",
                    "$comment": "Могут поддерживаться и другие типы."
                },
                "parameters": {
                    "type": "object",
                    "description": "Параметры трансформера. Состав зависит от типа."
                }
            },
            "required": [
                "name",
                "type",
                "parameters"
            ],
            "allOf": [
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "JSONataTransformer"
                            }
                        },
                        "required": [
                            "type"
                        ]
                    },
                    "then": {
                        "properties": {
                            "parameters": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "transformation": {
                                        "type": "string",
                                        "minLength": 1,
                                        "description": "Выражение/шаблон JSONata для проекции данных."
                                    }
                                },
                                "required": [
                                    "transformation"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        "Receiver": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "_comment": {
                    "type": "string",
                    "description": "Комментарий к получателю."
                },
                "name": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Уникальное имя получателя (канала)."
                },
                "description": {
                    "type": "string",
                    "description": "Описание назначения канала."
                },
                "trackingInstance": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Ссылка на TrackingInstance по значению его 'sourceTable'."
                },
                "filter": {
                    "type": "string",
                    "description": "Опциональная ссылка на фильтр по имени. Если не указано — события не фильтруются."
                },
                "transformer": {
                    "type": "string",
                    "description": "Опциональная ссылка на трансформер по имени."
                },
                "type": {
                    "type": "string",
                    "description": "Тип получателя. Примеры: WebhookReceiver, MyKafkaReceiver.",
                    "$comment": "Список типов может быть расширен приложением."
                },
                "retryCount": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "Количество повторных попыток отправки при ошибке."
                },
                "parameters": {
                    "type": "object",
                    "description": "Параметры канала доставки. Зависит от типа."
                }
            },
            "required": [
                "name",
                "trackingInstance",
                "type",
                "parameters"
            ],
            "allOf": [
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "WebhookReceiver"
                            }
                        },
                        "required": [
                            "type"
                        ]
                    },
                    "then": {
                        "properties": {
                            "parameters": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "webhookUrl": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "URL вебхука для отправки события."
                                    },
                                    "httpMethod": {
                                        "type": "string",
                                        "enum": [
                                            "POST",
                                            "PUT",
                                            "PATCH"
                                        ],
                                        "description": "HTTP метод отправки."
                                    },
                                    "headers": {
                                        "type": "object",
                                        "description": "HTTP заголовки запроса.",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "bodyTemplate": {
                                        "type": "string",
                                        "description": "Необязательный шаблон тела запроса."
                                    }
                                },
                                "required": [
                                    "webhookUrl",
                                    "httpMethod"
                                ]
                            }
                        }
                    }
                },
                {
                    "if": {
                        "properties": {
                            "type": {
                                "const": "MyKafkaReceiver"
                            }
                        },
                        "required": [
                            "type"
                        ]
                    },
                    "then": {
                        "properties": {
                            "parameters": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "bootstrapServers": {
                                        "type": "string",
                                        "minLength": 1,
                                        "description": "Адрес(а) брокеров Kafka, например 'localhost:9092'."
                                    },
                                    "topic": {
                                        "type": "string",
                                        "minLength": 1,
                                        "description": "Имя топика для публикации."
                                    },
                                    "clientId": {
                                        "type": "string",
                                        "minLength": 1,
                                        "description": "Идентификатор клиента."
                                    },
                                    "acks": {
                                        "type": "string",
                                        "description": "Требование подтверждений от брокера (например, 'all', '1', '0')."
                                    }
                                },
                                "required": [
                                    "bootstrapServers",
                                    "topic"
                                ]
                            }
                        }
                    }
                }
            ]
        }
    }
}