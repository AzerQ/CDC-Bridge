// <auto-generated />
using System;
using CdcBridge.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CdcBridge.Persistence.Migrations
{
    [DbContext(typeof(CdcBridgeDbContext))]
    partial class CdcBridgeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.20");

            modelBuilder.Entity("CdcBridge.Core.Models.ApiKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastUsedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Owner")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Permission")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("ApiKeys");
                });

            modelBuilder.Entity("CdcBridge.Persistence.Models.BufferedChangeEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BufferedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Change")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RowLabel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TrackingInstanceName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BufferedChangeEvents");
                });

            modelBuilder.Entity("CdcBridge.Persistence.Models.ReceiverDeliveryStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AttemptCount")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("AverageDeliveryTimeMs")
                        .HasColumnType("REAL");

                    b.Property<Guid>("BufferedChangeEventId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastAttemptAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<long?>("LastDeliveryTimeMs")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReceiverName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BufferedChangeEventId", "ReceiverName")
                        .IsUnique();

                    b.ToTable("ReceiverDeliveryStatuses");
                });

            modelBuilder.Entity("CdcBridge.Persistence.Models.TrackingInstanceState", b =>
                {
                    b.Property<string>("TrackingInstanceName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastProcessedRowLabel")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("TrackingInstanceName");

                    b.ToTable("TrackingInstanceStates");
                });

            modelBuilder.Entity("CdcBridge.Persistence.Models.ReceiverDeliveryStatus", b =>
                {
                    b.HasOne("CdcBridge.Persistence.Models.BufferedChangeEvent", "BufferedChangeEvent")
                        .WithMany("DeliveryStatuses")
                        .HasForeignKey("BufferedChangeEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BufferedChangeEvent");
                });

            modelBuilder.Entity("CdcBridge.Persistence.Models.BufferedChangeEvent", b =>
                {
                    b.Navigation("DeliveryStatuses");
                });
#pragma warning restore 612, 618
        }
    }
}
